import numpy as np
import statistics as s
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression

dataset = pd.read_csv(r'file.csv')
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 4].values

dataset.apply(pd.to_numeric)

x1 = [] # R&D
x2 = [] # Admin
x3 = [] # Market
x4 = []

target_y = list(y)
target_x = list(x)

for row in x:
    x1.append(row[0])
    x2.append(row[1])
    x3.append(row[2])
    x4.append(row[3])

plt.xlabel('factors')
plt.ylabel('profit')
plt.scatter(x1,target_y,color = 'green',label = 'R&D')
plt.scatter(x2,target_y,color = 'red',label = 'Admin')
plt.scatter(x3,target_y,color = 'blue',label = 'Market')

fl_profits = []
ca_profits = []
ny_profits = []

for i in range(len(x4)):
    if x4[i] == 2.0:
        fl_profits.append(target_y[i])
    elif x4[i] == 1.0:
        ca_profits.append(target_y[i])
    elif x4[i] == 0.0:
        ny_profits.append(target_y[i])

fl_profits_mean = s.mean(fl_profits)
ny_profits_mean = s.mean(ny_profits)
ca_profits_mean = s.mean(ca_profits)
state_profits = [ny_profits_mean, ca_profits_mean, fl_profits_mean]
x4 = list(set(x4))

'''
ny = 0
ca = 1
fl = 2
'''

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 0)
sc_x = StandardScaler()
x_train = sc_x.fit_transform(x_train)
x_test = sc_x.transform(x_test)
regressor = LinearRegression()
regressor.fit(x_train, y_train)
y_pred = regressor.predict(x_test)

print(y_pred[4]-y_test[4])
print(y_test[3]-y_pred[3])

